Flutter ile geliÅŸtirilen mevcut bir projeye yeni Ã¶zellik/modÃ¼l entegre ediyorum. Projede MVVM mimarisi, Provider state yÃ¶netimi ve http paketiyle Ã§alÄ±ÅŸan bir servis yapÄ±sÄ± kullanÄ±lÄ±yor. AÅŸaÄŸÄ±daki kurallara gÃ¶re kod Ã¼ret:

âœ… Kodlar:

Mevcut mimariye tam uyumlu olmalÄ±.

Dosya yapÄ±sÄ± bozulmamalÄ±.

Kod %100 test edilmiÅŸ gibi yazÄ±lmalÄ±, hatasÄ±z Ã§alÄ±ÅŸmalÄ±.

Modern Flutter kurallarÄ±na gÃ¶re optimize edilmeli (rebuild azalt, lazy yÃ¼kleme kullan, const yapÄ±larla optimize et).

KÃ¼tÃ¼phaneler gÃ¼ncel Flutter versiyonlarÄ±na tam uyumlu olmalÄ±.

ğŸ“¡ API Servisleri:

http paketi kullanÄ±lmalÄ±.

EÄŸer statusCode == 410 ise baÅŸarÄ±lÄ± say, herhangi bir hata gÃ¶sterme.

statusCode == 417 ise kullanÄ±cÄ±ya gÃ¶rÃ¼nÃ¼r ÅŸekilde errorMessage ver.

JSON verileri gÃ¼venli parse edilmeli (try-catch yapÄ±sÄ±, null kontrolleri vs.)

ğŸ§  State YÃ¶netimi:

ViewModelâ€™ler ChangeNotifier yapÄ±sÄ±yla Ã§alÄ±ÅŸÄ±yor.

notifyListeners() doÄŸru yerde kullanÄ±lmalÄ±.

Consumer, Selector, Provider.of gibi yapÄ±larla uyumlu Ã§alÄ±ÅŸmalÄ±.

ViewModelâ€™lerde state bool'larÄ± temiz ve kontrollÃ¼ tutulmalÄ± (isLoading, hasError, vs.)

ğŸ’» UI:

Yeni widgetâ€™lar mevcut tasarÄ±ma uygun, sade, ÅŸÄ±k, kurumsal gÃ¶rÃ¼nÃ¼mde olmalÄ±.

Flat, shadow'lu modern yapÄ±, yeterli spacing/padding.

Responsive olmalÄ±.

Gerekliyse shimmer / skeleton loader kullanÄ±lmalÄ±.

âš  Dikkat:

SÄ±fÄ±rdan KENDÄ°N yapma. Var olan projede ki kodlarÄ±ma bak anla ve ona gÃ¶re entegre edeceksin.

Asla eksik bÄ±rakma. TÃ¼m dosyalarÄ± Ã¼ret (model, viewmodel, service, view).

KullanÄ±cÄ±ya soru sorma, direkt en iyi Ã§Ã¶zÃ¼mÃ¼ Ã¼ret.

Kodlar test edilmiÅŸ gibi Ã§alÄ±ÅŸmalÄ±. HiÃ§bir hata olmamalÄ±.